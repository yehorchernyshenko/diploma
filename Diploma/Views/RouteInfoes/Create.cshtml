@using Diploma.Models.Enums
@model Diploma.Models.ViewModels.CreateRouteViewModel

@{
    ViewData["Title"] = "Create route";
}

<h4>Route Info</h4>
<hr />
@using (Html.BeginForm("Create", "RouteInfoes", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()
    <h4>Create a new route.</h4>
    <hr />
    @Html.ValidationSummary("", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(m => m.From, new { @class = "col-md-2 control-label" })
        <div class="col-md-6">
            @Html.EditorFor(model => model.From, new { htmlAttributes = new { @class = "form-control" } })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.To, new { @class = "col-md-2 control-label" })
        <div class="col-md-6">
            @Html.EditorFor(model => model.To, new { htmlAttributes = new { @class = "form-control" } })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Comment, new { @class = "col-md-2 control-label" })
        <div class="col-md-6">
            @Html.EditorFor(model => model.Comment, new { htmlAttributes = new { @class = "form-control" } })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Currency, new { @class = "col-md-2 control-label" })
        <div class="col-md-2">
            @Html.DropDownList("Currency", Html.GetEnumSelectList(typeof(Currency)), new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Price, new { @class = "col-md-2 control-label" })
        <div class="col-md-2">
            @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.DepartureTime, new { @class = "col-md-2 control-label" })
        <div class="col-md-2">
            @Html.EditorFor(model => model.DepartureTime, new { htmlAttributes = new { @class = "form-control" } })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.DepartureDate, new { @class = "col-md-2 control-label" })
        <div class="col-md-2">
            @Html.EditorFor(model => model.DepartureDate, new { htmlAttributes = new { @class = "form-control" } })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Capacity, new { @class = "col-md-2 control-label" })
        <div class="col-md-2">
            @Html.EditorFor(model => model.Capacity, new { htmlAttributes = new { @class = "form-control" } })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.RouteLength, new { @class = "col-md-2 control-label" })
        <div class="col-md-2">
            @Html.EditorFor(model => model.RouteLength.Value, new { htmlAttributes = new { @class = "form-control" } })
        </div>
    </div>
    <div class="form-group">
        <input type="submit" value="Create" class="btn btn-default" />
    </div>
}

<div>
    <a asp-action="Index" asp-controller="Home">Back to Home Page</a>
</div>